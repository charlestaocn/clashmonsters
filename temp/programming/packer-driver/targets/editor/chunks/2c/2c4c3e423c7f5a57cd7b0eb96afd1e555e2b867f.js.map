{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/UI/LevelUpWindow/LevelUpModalWindow.ts"],"names":["LevelUpModalWindowParams","instantiate","Node","Prefab","Vec3","_decorator","ModalWindow","shuffle","delay","LevelUpSkill","ccclass","property","LevelUpModalWindow","maxUpgradesToPick","setup","params","shuffledAvailableUpgrades","availableUpgrades","length","xPositions","i","skill","skillPrefab","getComponent","node","setParent","skillParent","setPosition","console","log","init","translationData","ChooseSkillEvent","on","chooseSkill","upgradeType","dismiss"],"mappings":";;;uKAyCaA,wB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzCLC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;;AACjCC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,K,iBAAAA,K;;AAGAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OAEF;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,O,GAAsBN,U;;oCAGfO,kB,WADZF,OAAO,CAAC,oBAAD,C,UAEHC,QAAQ,CAACR,MAAD,C,UACRQ,QAAQ,CAACT,IAAD,C,2BAHb,MACaU,kBADb;AAAA;AAAA,sCAC2F;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAI/EC,iBAJ+E,GAI3D,CAJ2D;AAAA;;AAMlE,cAALC,KAAK,CAACC,MAAD,EAAkD;AACnE,gBAAMC,yBAAyB,GAAG;AAAA;AAAA,kCAAQD,MAAM,CAACE,iBAAf,CAAlC;;AACA,cAAI,KAAKJ,iBAAL,GAAyBG,yBAAyB,CAACE,MAAvD,EAA+D;AAC3DF,YAAAA,yBAAyB,CAACE,MAA1B,GAAmC,KAAKL,iBAAxC;AACH;;AACD,gBAAMM,UAAoB,GAAG,CAAC,CAAC,GAAF,EAAO,CAAP,EAAU,GAAV,CAA7B;AACA,gBAAM;AAAA;AAAA,8BAAM,GAAN,CAAN;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,yBAAyB,CAACE,MAA9C,EAAsDE,CAAC,EAAvD,EAA2D;AACvD,kBAAM;AAAA;AAAA,gCAAM,GAAN,CAAN;AACA,kBAAMC,KAAmB,GAAGpB,WAAW,CAAC,KAAKqB,WAAN,CAAX,CAA8BC,YAA9B;AAAA;AAAA,6CAA5B;AACAF,YAAAA,KAAK,CAACG,IAAN,CAAWC,SAAX,CAAqB,KAAKC,WAA1B;AACAL,YAAAA,KAAK,CAACG,IAAN,CAAWG,WAAX,CAAuB,IAAIvB,IAAJ,CAASe,UAAU,CAACC,CAAD,CAAnB,CAAvB,EAJuD,CAKvD;;AACAQ,YAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACG,IAAlB;AACAH,YAAAA,KAAK,CAACS,IAAN,CAAWd,yBAAyB,CAACI,CAAD,CAApC,EAAyCL,MAAM,CAACgB,eAAhD;AACAV,YAAAA,KAAK,CAACW,gBAAN,CAAuBC,EAAvB,CAA0B,KAAKC,WAA/B,EAA4C,IAA5C;AACH;AACJ;;AAEOA,QAAAA,WAAW,CAACC,WAAD,EAAiC;AAChD,eAAKC,OAAL,CAAaD,WAAb;AACH;;AA3BsF,O;;;;;;;;;;;;0CA8B9EnC,wB,GAAN,MAAMA,wBAAN,CAA+B;AAAA;AAAA,eAC3BiB,iBAD2B;AAAA,eAE3Bc,eAF2B;AAAA;;AAAA,O","sourcesContent":["import {instantiate, Node, Prefab, Vec3, _decorator} from \"cc\";\r\nimport {ModalWindow} from \"../../../Services/ModalWindowSystem/ModalWindow\";\r\nimport {shuffle} from \"../../../Services/Utils/ArrayUtils\";\r\nimport {delay} from \"../../../Services/Utils/AsyncUtils\";\r\nimport {TranslationData} from \"../../Data/TranslationData\";\r\nimport {UpgradeType} from \"../../Upgrades/UpgradeType\";\r\nimport {LevelUpSkill} from \"./LevelUpSkill\";\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\n@ccclass(\"LevelUpModalWindow\")\r\nexport class LevelUpModalWindow extends ModalWindow<LevelUpModalWindowParams, UpgradeType> {\r\n    @property(Prefab) private skillPrefab: Prefab;\r\n    @property(Node) private skillParent: Node;\r\n\r\n    private maxUpgradesToPick = 3;\r\n\r\n    protected async setup(params: LevelUpModalWindowParams): Promise<void> {\r\n        const shuffledAvailableUpgrades = shuffle(params.availableUpgrades);\r\n        if (this.maxUpgradesToPick < shuffledAvailableUpgrades.length) {\r\n            shuffledAvailableUpgrades.length = this.maxUpgradesToPick;\r\n        }\r\n        const xPositions: number[] = [-210, 0, 210];\r\n        await delay(300);\r\n        for (let i = 0; i < shuffledAvailableUpgrades.length; i++) {\r\n            await delay(500);\r\n            const skill: LevelUpSkill = instantiate(this.skillPrefab).getComponent(LevelUpSkill);\r\n            skill.node.setParent(this.skillParent);\r\n            skill.node.setPosition(new Vec3(xPositions[i]));\r\n            // skill.node.addComponent(Animation as any);\r\n            console.log(skill.node)\r\n            skill.init(shuffledAvailableUpgrades[i], params.translationData);\r\n            skill.ChooseSkillEvent.on(this.chooseSkill, this);\r\n        }\r\n    }\r\n\r\n    private chooseSkill(upgradeType: UpgradeType): void {\r\n        this.dismiss(upgradeType);\r\n    }\r\n}\r\n\r\nexport class LevelUpModalWindowParams {\r\n    public availableUpgrades: UpgradeType[];\r\n    public translationData: TranslationData;\r\n}\r\n"]}