{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/Unit/Enemy/EnemySpawner/EnemySpawner.ts"],"names":["_decorator","Component","Prefab","Vec3","Signal","ObjectPool","ccclass","property","EnemySpawner","enemyAddedEvent","enemyRemovedEvent","enemyGraphicsTypeToPool","Map","targetNode","idToSettings","init","enemiesSettings","enemy","enemies","enemyPool","node","set","name","enemySettings","id","EnemyAddedEvent","EnemyRemovedEvent","spawnNewEnemy","positionX","positionY","has","Error","get","graphicsType","borrow","spawnPosition","x","worldPosition","y","setup","DeathEvent","on","returnEnemy","LifetimeEndedEvent","trigger","off","console","log","return"],"mappings":"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","sourcesContent":["import { _decorator, Component, Prefab, Vec3, Node } from \"cc\";\r\nimport { ISignal } from \"../../../../Services/EventSystem/ISignal\";\r\nimport { Signal } from \"../../../../Services/EventSystem/Signal\";\r\nimport { ObjectPool } from \"../../../../Services/ObjectPool\";\r\nimport { EnemySettings } from \"../../../Data/GameSettings\";\r\nimport { Enemy } from \"../Enemy\";\r\nimport { EnemyGraphicsType } from \"../EnemyGraphicsType\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"EnemySpawner\")\r\nexport class EnemySpawner extends Component {\r\n    @property(Prefab) private enemies: Prefab[] = [];\r\n\r\n    private enemyAddedEvent: Signal<Enemy> = new Signal<Enemy>();\r\n    private enemyRemovedEvent: Signal<Enemy> = new Signal<Enemy>();\r\n\r\n    private enemyGraphicsTypeToPool = new Map<EnemyGraphicsType, ObjectPool<Enemy>>();\r\n    private targetNode: Node;\r\n\r\n    private idToSettings = new Map<string, EnemySettings>();\r\n\r\n    public init(targetNode: Node, enemiesSettings: EnemySettings[]): void {\r\n        this.targetNode = targetNode;\r\n\r\n        for (const enemy of this.enemies) {\r\n            const enemyPool: ObjectPool<Enemy> = new ObjectPool(enemy, this.node, 50, \"Enemy\");\r\n            this.enemyGraphicsTypeToPool.set(<EnemyGraphicsType>enemy.name, enemyPool);\r\n        }\r\n\r\n        for (const enemySettings of enemiesSettings) {\r\n            this.idToSettings.set(enemySettings.id, enemySettings);\r\n        }\r\n    }\r\n\r\n    public get EnemyAddedEvent(): ISignal<Enemy> {\r\n        return this.enemyAddedEvent;\r\n    }\r\n\r\n    public get EnemyRemovedEvent(): ISignal<Enemy> {\r\n        return this.enemyRemovedEvent;\r\n    }\r\n\r\n    public spawnNewEnemy(positionX: number, positionY: number, id: string): Enemy {\r\n        if (!this.idToSettings.has(id)) {\r\n            throw new Error(\"Does not have setting for enemy \" + id);\r\n        }\r\n\r\n        const enemySettings = this.idToSettings.get(id);\r\n\r\n        const enemy = this.enemyGraphicsTypeToPool.get(<EnemyGraphicsType>enemySettings.graphicsType).borrow();\r\n       \r\n       \r\n        const spawnPosition = new Vec3();\r\n        spawnPosition.x = this.targetNode.worldPosition.x + positionX;\r\n        spawnPosition.y = this.targetNode.worldPosition.y + positionY;\r\n        enemy.setup(spawnPosition, enemySettings);\r\n\r\n        enemy.DeathEvent.on(this.returnEnemy, this);\r\n        enemy.LifetimeEndedEvent.on(this.returnEnemy, this);\r\n\r\n        this.enemyAddedEvent.trigger(enemy);\r\n\r\n        return enemy;\r\n    }\r\n\r\n    public returnEnemy(enemy: Enemy): void {\r\n        enemy.DeathEvent.off(this.returnEnemy);\r\n        enemy.LifetimeEndedEvent.off(this.returnEnemy);\r\n\r\n        console.log(enemy.name);\r\n        this.enemyGraphicsTypeToPool.get(<EnemyGraphicsType>enemy.node.name).return(enemy);\r\n\r\n        this.enemyRemovedEvent.trigger(enemy);\r\n    }\r\n}\r\n"]}