{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/ModalWIndows/GameModalLauncher.ts"],"names":["GameModalLauncher","Game","GameModalWindowTypes","constructor","modalWindowManager","player","gamePauser","upgrader","translationData","Level","LevelUpEvent","on","showLevelUpModal","pause","skillToUpgrade","showModal","LevelUp","availableUpgrades","Array","from","getAvailableUpgrades","upgradeSkill","resume","showChestModal","Chest","showPauseModal","shouldExit","Pause","Instance","exitGame"],"mappings":";;;0DAYaA,iB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AARJC,MAAAA,I,iBAAAA,I;;AAMAC,MAAAA,oB,iBAAAA,oB;;;;;;;mCAEIF,iB,GAAN,MAAMA,iBAAN,CAAwB;AACpBG,QAAAA,WAAW,CACNC,kBADM,EAENC,MAFM,EAGNC,UAHM,EAINC,QAJM,EAKNC,eALM,EAMhB;AAAA,eALUJ,kBAKV,GALUA,kBAKV;AAAA,eAJUC,MAIV,GAJUA,MAIV;AAAA,eAHUC,UAGV,GAHUA,UAGV;AAAA,eAFUC,QAEV,GAFUA,QAEV;AAAA,eADUC,eACV,GADUA,eACV;AACE,eAAKH,MAAL,CAAYI,KAAZ,CAAkBC,YAAlB,CAA+BC,EAA/B,CAAkC,KAAKC,gBAAvC,EAAyD,IAAzD;AACH;;AAE6B,cAAhBA,gBAAgB,GAAkB;AAC5C,eAAKN,UAAL,CAAgBO,KAAhB;AACA,gBAAMC,cAA2B,GAAG,MAAM,KAAKV,kBAAL,CAAwBW,SAAxB,CACtC;AAAA;AAAA,4DAAqBC,OADiB,EAEtC;AAAEC,YAAAA,iBAAiB,EAAEC,KAAK,CAACC,IAAN,CAAW,KAAKZ,QAAL,CAAca,oBAAd,EAAX,CAArB;AAAuEZ,YAAAA,eAAe,EAAE,KAAKA;AAA7F,WAFsC,CAA1C;AAIA,eAAKD,QAAL,CAAcc,YAAd,CAA2BP,cAA3B;AACA,eAAKR,UAAL,CAAgBgB,MAAhB;AACH;;AAE0B,cAAdC,cAAc,GAAkB;AACzC,eAAKjB,UAAL,CAAgBO,KAAhB;AACA,gBAAMC,cAA2B,GAAG,MAAM,KAAKV,kBAAL,CAAwBW,SAAxB,CACtC;AAAA;AAAA,4DAAqBS,KADiB,EAEtC;AAAEP,YAAAA,iBAAiB,EAAEC,KAAK,CAACC,IAAN,CAAW,KAAKZ,QAAL,CAAca,oBAAd,EAAX,CAArB;AAAuEZ,YAAAA,eAAe,EAAE,KAAKA;AAA7F,WAFsC,CAA1C;AAIA,eAAKD,QAAL,CAAcc,YAAd,CAA2BP,cAA3B;AACA,eAAKR,UAAL,CAAgBgB,MAAhB;AACH;;AAE0B,cAAdG,cAAc,GAAkB;AACzC,eAAKnB,UAAL,CAAgBO,KAAhB;AACA,gBAAMa,UAAU,GAAG,MAAM,KAAKtB,kBAAL,CAAwBW,SAAxB,CAA+D;AAAA;AAAA,4DAAqBY,KAApF,EAA2F,KAAKvB,kBAAhG,CAAzB;;AAEA,cAAIsB,UAAJ,EAAgB;AACZ;AAAA;AAAA,8BAAKE,QAAL,CAAcC,QAAd;AACH,WAFD,MAEO;AACH,iBAAKvB,UAAL,CAAgBgB,MAAhB;AACH;AACJ;;AAxC0B,O","sourcesContent":["import { MenuModalWindowTypes } from \"../../Menu/ModalWindows/MenuModalWindowTypes\";\r\nimport { Empty } from \"../../Menu/ModalWindows/Upgrades/UpgradesModalWindow\";\r\nimport { ModalWindowManager } from \"../../Services/ModalWindowSystem/ModalWindowManager\";\r\nimport { TranslationData } from \"../Data/TranslationData\";\r\nimport { Game } from \"../Game\";\r\nimport { Pauser } from \"../Pauser\";\r\nimport { LevelUpModalWindowParams } from \"../UI/LevelUpWindow/LevelUpModalWindow\";\r\nimport { Player } from \"../Unit/Player/Player\";\r\nimport { Upgrader } from \"../Upgrades/Upgrader\";\r\nimport { UpgradeType } from \"../Upgrades/UpgradeType\";\r\nimport { GameModalWindowTypes } from \"./GameModalWindowTypes\";\r\n\r\nexport class GameModalLauncher {\r\n    public constructor(\r\n        private modalWindowManager: ModalWindowManager,\r\n        private player: Player,\r\n        private gamePauser: Pauser,\r\n        private upgrader: Upgrader,\r\n        private translationData: TranslationData\r\n    ) {\r\n        this.player.Level.LevelUpEvent.on(this.showLevelUpModal, this);\r\n    }\r\n\r\n    private async showLevelUpModal(): Promise<void> {\r\n        this.gamePauser.pause();\r\n        const skillToUpgrade: UpgradeType = await this.modalWindowManager.showModal<LevelUpModalWindowParams, UpgradeType>(\r\n            GameModalWindowTypes.LevelUp,\r\n            { availableUpgrades: Array.from(this.upgrader.getAvailableUpgrades()), translationData: this.translationData }\r\n        );\r\n        this.upgrader.upgradeSkill(skillToUpgrade);\r\n        this.gamePauser.resume();\r\n    }\r\n\r\n    public async showChestModal(): Promise<void> {\r\n        this.gamePauser.pause();\r\n        const skillToUpgrade: UpgradeType = await this.modalWindowManager.showModal<LevelUpModalWindowParams, UpgradeType>(\r\n            GameModalWindowTypes.Chest,\r\n            { availableUpgrades: Array.from(this.upgrader.getAvailableUpgrades()), translationData: this.translationData }\r\n        );\r\n        this.upgrader.upgradeSkill(skillToUpgrade);\r\n        this.gamePauser.resume();\r\n    }\r\n\r\n    public async showPauseModal(): Promise<void> {\r\n        this.gamePauser.pause();\r\n        const shouldExit = await this.modalWindowManager.showModal<ModalWindowManager, boolean>(GameModalWindowTypes.Pause, this.modalWindowManager);\r\n\r\n        if (shouldExit) {\r\n            Game.Instance.exitGame();\r\n        } else {\r\n            this.gamePauser.resume();\r\n        }\r\n    }\r\n}\r\n"]}