{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Menu/ModalWindows/Upgrades/UpgradesModalWindow.ts"],"names":["Empty","AudioClip","instantiate","Label","Node","Prefab","_decorator","AppRoot","MetaUpgradeType","ModalWindow","UpgradeUI","ccclass","property","UpgradesModalWindow","typeToLevel","Map","typeToCosts","typeToLevelKey","typeToUpgradeUI","userData","setup","Instance","LiveUserData","settings","Settings","metaUpgrades","createUpgradeButton","Health","health","OverallDamage","overallDamage","ProjectilePiercing","projectilePiercing","MovementSpeed","movementSpeed","XPGatherer","xpGatherer","GoldGatherer","goldGatherer","goldCoinsLabel","string","game","goldCoins","toString","upgradeType","upgradeSettings","levelKey","upgradeButton","upgradeButtonPrefab","upgradeUI","getComponent","init","TranslationData","InteractedEvent","on","tryUpgrade","setParent","upgradeButtonParent","set","costs","console","log","get","currentLevel","length","AudioPlayer","playSound","upgradeAudioClip","level","updateLevel","saveUserData"],"mappings":"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","sourcesContent":["import { AudioClip, instantiate, Label, Node, Prefab, _decorator } from \"cc\";\r\nimport { AppRoot } from \"../../../AppRoot/AppRoot\";\r\nimport { MetaUpgradeSettings } from \"../../../Game/Data/GameSettings\";\r\nimport { MetaUpgradesData, UserData } from \"../../../Game/Data/UserData\";\r\nimport { MetaUpgradeType } from \"../../../Game/Upgrades/UpgradeType\";\r\nimport { ModalWindow } from \"../../../Services/ModalWindowSystem/ModalWindow\";\r\nimport { UpgradeUI } from \"./UpgradeUI\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"UpgradesModalWindow\")\r\nexport class UpgradesModalWindow extends ModalWindow<Empty, Empty> {\r\n    @property(Prefab) private upgradeButtonPrefab: Prefab;\r\n    @property(Node) private upgradeButtonParent: Node;\r\n    @property(Label) private goldCoinsLabel: Label;\r\n    @property(AudioClip) private upgradeAudioClip: AudioClip;\r\n\r\n    private typeToLevel = new Map<MetaUpgradeType, number>();\r\n    private typeToCosts = new Map<MetaUpgradeType, number[]>();\r\n    private typeToLevelKey = new Map<MetaUpgradeType, keyof MetaUpgradesData>();\r\n    private typeToUpgradeUI = new Map<MetaUpgradeType, UpgradeUI>();\r\n\r\n    private userData: UserData;\r\n\r\n    public setup(): void {\r\n        this.userData = AppRoot.Instance.LiveUserData;\r\n        const settings = AppRoot.Instance.Settings.metaUpgrades;\r\n\r\n        this.createUpgradeButton(MetaUpgradeType.Health, settings.health, \"healthLevel\");\r\n        this.createUpgradeButton(MetaUpgradeType.OverallDamage, settings.overallDamage, \"overallDamageLevel\");\r\n        this.createUpgradeButton(MetaUpgradeType.ProjectilePiercing, settings.projectilePiercing, \"projectilePiercingLevel\");\r\n        this.createUpgradeButton(MetaUpgradeType.MovementSpeed, settings.movementSpeed, \"movementSpeedLevel\");\r\n        this.createUpgradeButton(MetaUpgradeType.XPGatherer, settings.xpGatherer, \"xpGathererLevel\");\r\n        this.createUpgradeButton(MetaUpgradeType.GoldGatherer, settings.goldGatherer, \"goldGathererLevel\");\r\n\r\n        this.goldCoinsLabel.string = this.userData.game.goldCoins.toString();\r\n    }\r\n\r\n    private createUpgradeButton<T extends keyof MetaUpgradesData>(\r\n        upgradeType: MetaUpgradeType,\r\n        upgradeSettings: MetaUpgradeSettings,\r\n        levelKey: T\r\n    ): void {\r\n        const upgradeButton: Node = instantiate(this.upgradeButtonPrefab);\r\n        const upgradeUI: UpgradeUI = upgradeButton.getComponent(UpgradeUI);\r\n\r\n        upgradeUI.init(upgradeType, upgradeSettings, this.userData.game.metaUpgrades[levelKey], AppRoot.Instance.TranslationData);\r\n        upgradeUI.InteractedEvent.on(this.tryUpgrade, this);\r\n        upgradeButton.setParent(this.upgradeButtonParent);\r\n\r\n        this.typeToLevel.set(upgradeType, this.userData.game.metaUpgrades[levelKey]);\r\n        this.typeToCosts.set(upgradeType, upgradeSettings.costs);\r\n        this.typeToLevelKey.set(upgradeType, levelKey);\r\n        this.typeToUpgradeUI.set(upgradeType, upgradeUI);\r\n    }\r\n\r\n    private tryUpgrade(upgradeType: MetaUpgradeType): void {\r\n        console.log(\"Trying to upgrade \" + upgradeType);\r\n\r\n        const costs: number[] = this.typeToCosts.get(upgradeType);\r\n        const currentLevel: number = this.typeToLevel.get(upgradeType);\r\n\r\n        if (costs.length <= currentLevel) return; // already max level\r\n        if (this.userData.game.goldCoins < costs[currentLevel]) return; // not enough gold\r\n\r\n        AppRoot.Instance.AudioPlayer.playSound(this.upgradeAudioClip);\r\n\r\n        this.userData.game.goldCoins -= costs[currentLevel];\r\n        const level = ++this.userData.game.metaUpgrades[this.typeToLevelKey.get(upgradeType)];\r\n        this.typeToUpgradeUI.get(upgradeType).updateLevel(level);\r\n        this.typeToLevel.set(upgradeType, level);\r\n\r\n        this.goldCoinsLabel.string = this.userData.game.goldCoins.toString();\r\n        AppRoot.Instance.saveUserData();\r\n    }\r\n}\r\n\r\nexport class Empty {}\r\n"]}