{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/Unit/Enemy/Enemy.ts"],"names":["BoxCollider2D","Component","Material","randomRange","Sprite","_decorator","Signal","delay","UnitHealth","ccclass","property","Enemy","deathEvent","lifetimeEndedEvent","id","movementType","health","damage","speedX","speedY","lifetimeLeft","xpReward","goldReward","healthPotionRewardChance","magnetRewardChance","chestRewardChance","endOfLifetimeTriggered","setup","position","settings","moveType","speed","lifetime","node","setWorldPosition","active","HealthPointsChangeEvent","on","animateHurt","Id","MovementType","Collider","collider","Damage","Health","DeathEvent","XPReward","GoldReward","HealthPotionRewardChance","MagnetRewardChance","ChestRewardChance","LifetimeEndedEvent","dealDamage","points","IsAlive","trigger","gameTick","move","deltaTime","newPosition","worldPosition","x","y","sprite","setScale","animateEndOfLifetime","material","whiteMaterial","defaultMaterial"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,a,OAAAA,a;AAAeC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAcC,MAAAA,U,OAAAA,U;;AAE/DC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,K,iBAAAA,K;;AAEAC,MAAAA,U,iBAAAA,U;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;uBAGjBM,K,WADZF,OAAO,CAAC,OAAD,C,UAEHC,QAAQ,CAACV,aAAD,C,UACRU,QAAQ,CAACN,MAAD,C,UACRM,QAAQ,CAACR,QAAD,C,UACRQ,QAAQ,CAACR,QAAD,C,2BALb,MACaS,KADb,SAC2BV,SAD3B,CACqC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAMzBW,UANyB,GAMG;AAAA;AAAA,iCANH;AAAA,eAOzBC,kBAPyB,GAOW;AAAA;AAAA,iCAPX;AAAA,eASzBC,EATyB;AAAA,eAUzBC,YAVyB;AAAA,eAWzBC,MAXyB;AAAA,eAYzBC,MAZyB;AAAA,eAazBC,MAbyB;AAAA,eAczBC,MAdyB;AAAA,eAezBC,YAfyB;AAAA,eAiBzBC,QAjByB;AAAA,eAkBzBC,UAlByB;AAAA,eAmBzBC,wBAnByB;AAAA,eAoBzBC,kBApByB;AAAA,eAqBzBC,iBArByB;AAAA,eAuBzBC,sBAvByB,GAuBA,KAvBA;AAAA;;AAyB1BC,QAAAA,KAAK,CAACC,QAAD,EAAiBC,QAAjB,EAAgD;AACxD,eAAKf,EAAL,GAAUe,QAAQ,CAACf,EAAnB;AACA,eAAKC,YAAL,GAAuCc,QAAQ,CAACC,QAAhD;AACA,eAAKd,MAAL,GAAc;AAAA;AAAA,wCAAea,QAAQ,CAACb,MAAxB,CAAd;AACA,eAAKC,MAAL,GAAcY,QAAQ,CAACZ,MAAvB;AACA,eAAKC,MAAL,GAAcf,WAAW,CAAC0B,QAAQ,CAACE,KAAT,GAAiB,CAAlB,EAAqBF,QAAQ,CAACE,KAA9B,CAAzB;AACA,eAAKZ,MAAL,GAAchB,WAAW,CAAC0B,QAAQ,CAACE,KAAT,GAAiB,CAAlB,EAAqBF,QAAQ,CAACE,KAA9B,CAAzB;AACA,eAAKX,YAAL,GAAoBS,QAAQ,CAACG,QAA7B;AAEA,eAAKX,QAAL,GAAgBQ,QAAQ,CAACR,QAAzB;AACA,eAAKC,UAAL,GAAkBO,QAAQ,CAACP,UAA3B;AACA,eAAKC,wBAAL,GAAgCM,QAAQ,CAACN,wBAAzC;AACA,eAAKC,kBAAL,GAA0BK,QAAQ,CAACL,kBAAnC;AACA,eAAKC,iBAAL,GAAyBI,QAAQ,CAACJ,iBAAlC;AAEA,eAAKQ,IAAL,CAAUC,gBAAV,CAA2BN,QAA3B;AACA,eAAKK,IAAL,CAAUE,MAAV,GAAmB,IAAnB;AAEA,eAAKnB,MAAL,CAAYoB,uBAAZ,CAAoCC,EAApC,CAAuC,KAAKC,WAA5C,EAAyD,IAAzD;AACA,eAAKZ,sBAAL,GAA8B,KAA9B;AACH;;AAEY,YAAFa,EAAE,GAAW;AACpB,iBAAO,KAAKzB,EAAZ;AACH;;AAEsB,YAAZ0B,YAAY,GAAsB;AACzC,iBAAO,KAAKzB,YAAZ;AACH;;AAEkB,YAAR0B,QAAQ,GAAkB;AACjC,iBAAO,KAAKC,QAAZ;AACH;;AAEgB,YAANC,MAAM,GAAW;AACxB,iBAAO,KAAK1B,MAAZ;AACH;;AAEgB,YAAN2B,MAAM,GAAe;AAC5B,iBAAO,KAAK5B,MAAZ;AACH;;AAEoB,YAAV6B,UAAU,GAAmB;AACpC,iBAAO,KAAKjC,UAAZ;AACH;;AAEkB,YAARkC,QAAQ,GAAW;AAC1B,iBAAO,KAAKzB,QAAZ;AACH;;AAEoB,YAAV0B,UAAU,GAAW;AAC5B,iBAAO,KAAKzB,UAAZ;AACH;;AAEkC,YAAxB0B,wBAAwB,GAAW;AAC1C,iBAAO,KAAKzB,wBAAZ;AACH;;AAE4B,YAAlB0B,kBAAkB,GAAW;AACpC,iBAAO,KAAKzB,kBAAZ;AACH;;AAE2B,YAAjB0B,iBAAiB,GAAW;AACnC,iBAAO,KAAKzB,iBAAZ;AACH;;AAE4B,YAAlB0B,kBAAkB,GAAmB;AAC5C,iBAAO,KAAKtC,kBAAZ;AACH;;AAEMuC,QAAAA,UAAU,CAACC,MAAD,EAAuB;AACpC,eAAKrC,MAAL,CAAYC,MAAZ,CAAmBoC,MAAnB;;AACA,cAAI,CAAC,KAAKrC,MAAL,CAAYsC,OAAjB,EAA0B;AACtB,iBAAK1C,UAAL,CAAgB2C,OAAhB,CAAwB,IAAxB;AACH;AACJ;;AAEMC,QAAAA,QAAQ,CAACC,IAAD,EAAaC,SAAb,EAAsC;AACjD,gBAAMC,WAAiB,GAAG,KAAK1B,IAAL,CAAU2B,aAApC;AACAD,UAAAA,WAAW,CAACE,CAAZ,IAAiBJ,IAAI,CAACI,CAAL,GAAS,KAAK3C,MAAd,GAAuBwC,SAAxC;AACAC,UAAAA,WAAW,CAACG,CAAZ,IAAiBL,IAAI,CAACK,CAAL,GAAS,KAAK3C,MAAd,GAAuBuC,SAAxC;;AAEA,cAAID,IAAI,CAACI,CAAL,GAAS,CAAb,EAAgB;AACZ,iBAAKE,MAAL,CAAY9B,IAAZ,CAAiB+B,QAAjB,CAA0B,CAAC,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC;AACH,WAFD,MAEO,IAAI,IAAIP,IAAI,CAACI,CAAb,EAAgB;AACnB,iBAAKE,MAAL,CAAY9B,IAAZ,CAAiB+B,QAAjB,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AACH;;AAED,eAAK/B,IAAL,CAAUC,gBAAV,CAA2ByB,WAA3B;;AAEA,cAAI,IAAI,KAAKvC,YAAb,EAA2B;AACvB,iBAAKA,YAAL,IAAqBsC,SAArB;;AACA,gBAAI,KAAKtC,YAAL,IAAqB,CAAzB,EAA4B;AACxB,mBAAKP,kBAAL,CAAwB0C,OAAxB,CAAgC,IAAhC;AACH,aAFD,MAEO,IAAI,KAAKnC,YAAL,IAAqB,CAAzB,EAA4B;AAC/B,mBAAK6C,oBAAL;AACH;AACJ;AACJ;;AAEiC,cAApBA,oBAAoB,GAAkB;AAChD,cAAI,KAAKvC,sBAAT,EAAiC;AAEjC,eAAKA,sBAAL,GAA8B,IAA9B;;AAEA,+BAAO,KAAKO,IAAZ,aAAO,WAAWE,MAAlB,EAA0B;AAAA;;AACtB,iBAAK4B,MAAL,CAAY9B,IAAZ,CAAiBE,MAAjB,GAA0B,KAA1B;AACA,kBAAM;AAAA;AAAA,gCAAM,GAAN,CAAN;AAEA,gBAAI,KAAK4B,MAAL,IAAe,IAAnB,EAAyB,MAJH,CAIU;;AAEhC,iBAAKA,MAAL,CAAY9B,IAAZ,CAAiBE,MAAjB,GAA0B,IAA1B;AACA,kBAAM;AAAA;AAAA,gCAAM,GAAN,CAAN;AACH;AACJ;;AAEwB,cAAXG,WAAW,GAAkB;AACvC,eAAKyB,MAAL,CAAYG,QAAZ,GAAuB,KAAKC,aAA5B;AACA,gBAAM;AAAA;AAAA,8BAAM,GAAN,CAAN;AACA,eAAKJ,MAAL,CAAYG,QAAZ,GAAuB,KAAKE,eAA5B;AACH;;AAjJgC,O","sourcesContent":["import { BoxCollider2D, Component, Material, randomRange, Sprite, Vec3, _decorator } from \"cc\";\r\nimport { ISignal } from \"../../../Services/EventSystem/ISignal\";\r\nimport { Signal } from \"../../../Services/EventSystem/Signal\";\r\nimport { delay } from \"../../../Services/Utils/AsyncUtils\";\r\nimport { EnemySettings } from \"../../Data/GameSettings\";\r\nimport { UnitHealth } from \"../UnitHealth\";\r\nimport { EnemyMovementType } from \"./EnemyMovementType\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"Enemy\")\r\nexport class Enemy extends Component {\r\n    @property(BoxCollider2D) private collider: BoxCollider2D;\r\n    @property(Sprite) private sprite: Sprite;\r\n    @property(Material) private defaultMaterial: Material;\r\n    @property(Material) private whiteMaterial: Material;\r\n\r\n    private deathEvent: Signal<Enemy> = new Signal<Enemy>();\r\n    private lifetimeEndedEvent: Signal<Enemy> = new Signal<Enemy>();\r\n\r\n    private id: string;\r\n    private movementType: EnemyMovementType;\r\n    private health: UnitHealth;\r\n    private damage: number;\r\n    private speedX: number;\r\n    private speedY: number;\r\n    private lifetimeLeft: number;\r\n\r\n    private xpReward: number;\r\n    private goldReward: number;\r\n    private healthPotionRewardChance: number;\r\n    private magnetRewardChance: number;\r\n    private chestRewardChance: number;\r\n\r\n    private endOfLifetimeTriggered = false;\r\n\r\n    public setup(position: Vec3, settings: EnemySettings): void {\r\n        this.id = settings.id;\r\n        this.movementType = <EnemyMovementType>settings.moveType;\r\n        this.health = new UnitHealth(settings.health);\r\n        this.damage = settings.damage;\r\n        this.speedX = randomRange(settings.speed / 2, settings.speed);\r\n        this.speedY = randomRange(settings.speed / 2, settings.speed);\r\n        this.lifetimeLeft = settings.lifetime;\r\n\r\n        this.xpReward = settings.xpReward;\r\n        this.goldReward = settings.goldReward;\r\n        this.healthPotionRewardChance = settings.healthPotionRewardChance;\r\n        this.magnetRewardChance = settings.magnetRewardChance;\r\n        this.chestRewardChance = settings.chestRewardChance;\r\n\r\n        this.node.setWorldPosition(position);\r\n        this.node.active = true;\r\n\r\n        this.health.HealthPointsChangeEvent.on(this.animateHurt, this);\r\n        this.endOfLifetimeTriggered = false;\r\n    }\r\n\r\n    public get Id(): string {\r\n        return this.id;\r\n    }\r\n\r\n    public get MovementType(): EnemyMovementType {\r\n        return this.movementType;\r\n    }\r\n\r\n    public get Collider(): BoxCollider2D {\r\n        return this.collider;\r\n    }\r\n\r\n    public get Damage(): number {\r\n        return this.damage;\r\n    }\r\n\r\n    public get Health(): UnitHealth {\r\n        return this.health;\r\n    }\r\n\r\n    public get DeathEvent(): ISignal<Enemy> {\r\n        return this.deathEvent;\r\n    }\r\n\r\n    public get XPReward(): number {\r\n        return this.xpReward;\r\n    }\r\n\r\n    public get GoldReward(): number {\r\n        return this.goldReward;\r\n    }\r\n\r\n    public get HealthPotionRewardChance(): number {\r\n        return this.healthPotionRewardChance;\r\n    }\r\n\r\n    public get MagnetRewardChance(): number {\r\n        return this.magnetRewardChance;\r\n    }\r\n\r\n    public get ChestRewardChance(): number {\r\n        return this.chestRewardChance;\r\n    }\r\n\r\n    public get LifetimeEndedEvent(): ISignal<Enemy> {\r\n        return this.lifetimeEndedEvent;\r\n    }\r\n\r\n    public dealDamage(points: number): void {\r\n        this.health.damage(points);\r\n        if (!this.health.IsAlive) {\r\n            this.deathEvent.trigger(this);\r\n        }\r\n    }\r\n\r\n    public gameTick(move: Vec3, deltaTime: number): void {\r\n        const newPosition: Vec3 = this.node.worldPosition;\r\n        newPosition.x += move.x * this.speedX * deltaTime;\r\n        newPosition.y += move.y * this.speedY * deltaTime;\r\n\r\n        if (move.x < 0) {\r\n            this.sprite.node.setScale(-1, 1, 1);\r\n        } else if (0 < move.x) {\r\n            this.sprite.node.setScale(1, 1, 1);\r\n        }\r\n\r\n        this.node.setWorldPosition(newPosition);\r\n\r\n        if (0 < this.lifetimeLeft) {\r\n            this.lifetimeLeft -= deltaTime;\r\n            if (this.lifetimeLeft <= 0) {\r\n                this.lifetimeEndedEvent.trigger(this);\r\n            } else if (this.lifetimeLeft <= 2) {\r\n                this.animateEndOfLifetime();\r\n            }\r\n        }\r\n    }\r\n\r\n    private async animateEndOfLifetime(): Promise<void> {\r\n        if (this.endOfLifetimeTriggered) return;\r\n\r\n        this.endOfLifetimeTriggered = true;\r\n\r\n        while (this.node?.active) {\r\n            this.sprite.node.active = false;\r\n            await delay(200);\r\n\r\n            if (this.sprite == null) break; // exit scene\r\n\r\n            this.sprite.node.active = true;\r\n            await delay(200);\r\n        }\r\n    }\r\n\r\n    private async animateHurt(): Promise<void> {\r\n        this.sprite.material = this.whiteMaterial;\r\n        await delay(100);\r\n        this.sprite.material = this.defaultMaterial;\r\n    }\r\n}\r\n"]}