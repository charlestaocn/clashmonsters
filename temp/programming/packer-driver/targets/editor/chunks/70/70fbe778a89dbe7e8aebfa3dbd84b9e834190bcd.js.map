{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Menu/GameRunner.ts"],"names":["GameRunner","director","AppRoot","Game","delay","constructor","isRunning","Instance","instance","IsRunning","playGame","loadScene","userData","LiveUserData","result","play","Settings","TranslationData","game","goldCoins","highscore","score","saveUserData"],"mappings":";;;+GAMaA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANJC,MAAAA,Q,OAAAA,Q;;AACAC,MAAAA,O,iBAAAA,O;;AAEAC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;;;4BAEIJ,U,GAAN,MAAMA,UAAN,CAAiB;AAKpB;AACQK,QAAAA,WAAW,GAAG;AAAA,eAHdC,SAGc,GAHF,KAGE;AAAE;;AAEE,mBAARC,QAAQ,GAAe;AACrC,iBAAO,KAAKC,QAAZ;AACH;;AAEmB,YAATC,SAAS,GAAY;AAC5B,iBAAO,KAAKH,SAAZ;AACH;;AAEoB,cAARI,QAAQ,GAAkB;AACnC,eAAKJ,SAAL,GAAiB,IAAjB;AACAL,UAAAA,QAAQ,CAACU,SAAT,CAAmB,MAAnB;AACA,gBAAMC,QAAkB,GAAG;AAAA;AAAA,kCAAQL,QAAR,CAAiBM,YAA5C;;AACA,iBAAO;AAAA;AAAA,4BAAKN,QAAL,IAAiB,IAAxB,EAA8B,MAAM;AAAA;AAAA,8BAAM,EAAN,CAAN;;AAC9B,gBAAMO,MAAkB,GAAG,MAAM;AAAA;AAAA,4BAAKP,QAAL,CAAcQ,IAAd,CAAmBH,QAAnB,EAA6B;AAAA;AAAA,kCAAQL,QAAR,CAAiBS,QAA9C,EAAwD;AAAA;AAAA,kCAAQT,QAAR,CAAiBU,eAAzE,CAAjC;AACAL,UAAAA,QAAQ,CAACM,IAAT,CAAcC,SAAd,IAA2BL,MAAM,CAACK,SAAlC;;AAEA,cAAIP,QAAQ,CAACM,IAAT,CAAcE,SAAd,GAA0BN,MAAM,CAACO,KAArC,EAA4C;AACxCT,YAAAA,QAAQ,CAACM,IAAT,CAAcE,SAAd,GAA0BN,MAAM,CAACO,KAAjC;AACH;;AACD;AAAA;AAAA,kCAAQd,QAAR,CAAiBe,YAAjB;AACArB,UAAAA,QAAQ,CAACU,SAAT,CAAmB,MAAnB;AACA,eAAKL,SAAL,GAAiB,KAAjB;AACH;;AA9BmB,O;;AAAXN,MAAAA,U,CACMQ,Q,GAAuB,IAAIR,UAAJ,E","sourcesContent":["import { director } from \"cc\";\r\nimport { AppRoot } from \"../AppRoot/AppRoot\";\r\nimport { UserData } from \"../Game/Data/UserData\";\r\nimport { Game, GameResult } from \"../Game/Game\";\r\nimport { delay } from \"../Services/Utils/AsyncUtils\";\r\n\r\nexport class GameRunner {\r\n    private static instance: GameRunner = new GameRunner();\r\n\r\n    private isRunning = false;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    private constructor() {}\r\n\r\n    public static get Instance(): GameRunner {\r\n        return this.instance;\r\n    }\r\n\r\n    public get IsRunning(): boolean {\r\n        return this.isRunning;\r\n    }\r\n\r\n    public async playGame(): Promise<void> {\r\n        this.isRunning = true;\r\n        director.loadScene(\"Game\");\r\n        const userData: UserData = AppRoot.Instance.LiveUserData;\r\n        while (Game.Instance == null) await delay(10);\r\n        const result: GameResult = await Game.Instance.play(userData, AppRoot.Instance.Settings, AppRoot.Instance.TranslationData);\r\n        userData.game.goldCoins += result.goldCoins;\r\n\r\n        if (userData.game.highscore < result.score) {\r\n            userData.game.highscore = result.score;\r\n        }\r\n        AppRoot.Instance.saveUserData();\r\n        director.loadScene(\"Menu\");\r\n        this.isRunning = false;\r\n    }\r\n}\r\n"]}