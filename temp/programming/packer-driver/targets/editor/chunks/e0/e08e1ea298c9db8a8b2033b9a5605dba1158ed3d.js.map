{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Utils/OpenCloseAnimator.ts"],"names":["Animation","Component","_decorator","delay","ccclass","property","OpenCloseAnimator","openStateName","closeStateName","openDuration","closeDuration","init","animation","getState","duration","playOpen","node","active","play","playClose"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;;AACtBC,MAAAA,K,iBAAAA,K;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;mCAGjBI,iB,WADZF,OAAO,CAAC,mBAAD,C,UAEHC,QAAQ,CAACL,SAAD,C,2BAFb,MACaM,iBADb,SACuCL,SADvC,CACiD;AAAA;AAAA;;AAAA;;AAAA,eAG5BM,aAH4B,GAGZ,MAHY;AAAA,eAI5BC,cAJ4B,GAIX,OAJW;AAAA,eAMrCC,YANqC,GAMtB,CANsB;AAAA,eAOrCC,aAPqC,GAOrB,CAPqB;AAAA;;AAStCC,QAAAA,IAAI,GAAS;AAChB,eAAKF,YAAL,GAAoB,KAAKG,SAAL,CAAeC,QAAf,CAAwB,KAAKN,aAA7B,EAA4CO,QAAhE;AACA,eAAKJ,aAAL,GAAqB,KAAKE,SAAL,CAAeC,QAAf,CAAwB,KAAKL,cAA7B,EAA6CM,QAAlE;AACH;;AAEoB,cAARC,QAAQ,GAAkB;AACnC,eAAKC,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,eAAKL,SAAL,CAAeM,IAAf,CAAoB,KAAKX,aAAzB;AACA,gBAAM;AAAA;AAAA,8BAAM,KAAKE,YAAL,GAAoB,IAA1B,CAAN;AACH;;AAEqB,cAATU,SAAS,GAAkB;AACpC,eAAKH,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,eAAKL,SAAL,CAAeM,IAAf,CAAoB,KAAKV,cAAzB;AACA,gBAAM;AAAA;AAAA,8BAAM,KAAKE,aAAL,GAAqB,IAA3B,CAAN;AACA,eAAKM,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;;AAzB4C,O","sourcesContent":["import { Animation, Component, _decorator } from \"cc\";\r\nimport { delay } from \"../Services/Utils/AsyncUtils\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"OpenCloseAnimator\")\r\nexport class OpenCloseAnimator extends Component {\r\n    @property(Animation) private animation: Animation;\r\n\r\n    private readonly openStateName = \"Open\";\r\n    private readonly closeStateName = \"Close\";\r\n\r\n    private openDuration = 0;\r\n    private closeDuration = 0;\r\n\r\n    public init(): void {\r\n        this.openDuration = this.animation.getState(this.openStateName).duration;\r\n        this.closeDuration = this.animation.getState(this.closeStateName).duration;\r\n    }\r\n\r\n    public async playOpen(): Promise<void> {\r\n        this.node.active = true;\r\n        this.animation.play(this.openStateName);\r\n        await delay(this.openDuration * 1000);\r\n    }\r\n\r\n    public async playClose(): Promise<void> {\r\n        this.node.active = true;\r\n        this.animation.play(this.closeStateName);\r\n        await delay(this.closeDuration * 1000);\r\n        this.node.active = false;\r\n    }\r\n}\r\n"]}