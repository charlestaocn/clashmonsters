{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/Items/ItemManager.ts"],"names":["Component","random","randomRange","_decorator","Signal","ItemSpawner","ItemType","PickupEffectManager","ccclass","property","ItemManager","player","gameResult","modalLauncher","healthPerPotion","pickupEvent","itemTypeToAction","Map","init","enemyManager","settings","EnemyAddedEvent","on","addEnemyListeners","EnemyRemovedEvent","removeEnemyListeners","xpSpawner","goldSpawner","healthPotionSpawner","magnetSpawner","chestSpawner","pickupEffectManager","set","XP","addXP","bind","Gold","addGold","HealthPotion","useHealthPotion","Magnet","activateMagnet","Chest","openChest","PickupEvent","pickupItem","item","has","Error","showEffect","node","worldPosition","get","trigger","pickup","Level","addXp","goldCoins","Health","heal","activate","showChestModal","enemy","DeathEvent","trySpawnItems","off","trySpawnXP","trySpawnGold","trySpawnOnce","HealthPotionRewardChance","getRandomPosition","MagnetRewardChance","ChestRewardChance","index","XPReward","spawn","GoldReward","i","chance","itemSpawner","position","x","y"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,U,OAAAA,U;;AAEtCC,MAAAA,M,iBAAAA,M;;AAQAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,mB,iBAAAA,mB;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAGjBO,W,WADZF,OAAO,CAAC,aAAD,C,UAEHC,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ;AAAA;AAAA,qD,2BAPb,MACaC,WADb,SACiCV,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAQ/BW,MAR+B;AAAA,eAS/BC,UAT+B;AAAA,eAU/BC,aAV+B;AAAA,eAW/BC,eAX+B;AAAA,eAa/BC,WAb+B,GAajB;AAAA;AAAA,iCAbiB;AAAA,eAe/BC,gBAf+B,GAeZ,IAAIC,GAAJ,EAfY;AAAA;;AAiBhCC,QAAAA,IAAI,CAACC,YAAD,EAA6BR,MAA7B,EAA6CC,UAA7C,EAAqEC,aAArE,EAAuGO,QAAvG,EAAqI;AAC5I,eAAKT,MAAL,GAAcA,MAAd;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA,eAAKC,eAAL,GAAuBM,QAAQ,CAACN,eAAhC;AAEAK,UAAAA,YAAY,CAACE,eAAb,CAA6BC,EAA7B,CAAgC,KAAKC,iBAArC,EAAwD,IAAxD;AACAJ,UAAAA,YAAY,CAACK,iBAAb,CAA+BF,EAA/B,CAAkC,KAAKG,oBAAvC,EAA6D,IAA7D;AAEA,eAAKC,SAAL,CAAeR,IAAf;AACA,eAAKS,WAAL,CAAiBT,IAAjB;AACA,eAAKU,mBAAL,CAAyBV,IAAzB;AACA,eAAKW,aAAL,CAAmBX,IAAnB;AACA,eAAKY,YAAL,CAAkBZ,IAAlB;AAEA,eAAKa,mBAAL,CAAyBb,IAAzB;AAEA,eAAKF,gBAAL,CAAsBgB,GAAtB,CAA0B;AAAA;AAAA,oCAASC,EAAnC,EAAuC,KAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAvC;AACA,eAAKnB,gBAAL,CAAsBgB,GAAtB,CAA0B;AAAA;AAAA,oCAASI,IAAnC,EAAyC,KAAKC,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAzC;AACA,eAAKnB,gBAAL,CAAsBgB,GAAtB,CAA0B;AAAA;AAAA,oCAASM,YAAnC,EAAiD,KAAKC,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAjD;AACA,eAAKnB,gBAAL,CAAsBgB,GAAtB,CAA0B;AAAA;AAAA,oCAASQ,MAAnC,EAA2C,KAAKC,cAAL,CAAoBN,IAApB,CAAyB,IAAzB,CAA3C;AACA,eAAKnB,gBAAL,CAAsBgB,GAAtB,CAA0B;AAAA;AAAA,oCAASU,KAAnC,EAA0C,KAAKC,SAAL,CAAeR,IAAf,CAAoB,IAApB,CAA1C;AACH;;AAEqB,YAAXS,WAAW,GAAsB;AACxC,iBAAO,KAAK7B,WAAZ;AACH;;AAEM8B,QAAAA,UAAU,CAACC,IAAD,EAAmB;AAChC,cAAI,CAAC,KAAK9B,gBAAL,CAAsB+B,GAAtB,CAA0BD,IAAI,CAACxC,QAA/B,CAAL,EAA+C,MAAM,IAAI0C,KAAJ,CAAU,qCAAqCF,IAAI,CAACxC,QAApD,CAAN;AAE/C,eAAKyB,mBAAL,CAAyBkB,UAAzB,CAAoCH,IAAI,CAACI,IAAL,CAAUC,aAA9C;AACA,eAAKnC,gBAAL,CAAsBoC,GAAtB,CAA0BN,IAAI,CAACxC,QAA/B;AACA,eAAKS,WAAL,CAAiBsC,OAAjB,CAAyBP,IAAI,CAACxC,QAA9B;AAEAwC,UAAAA,IAAI,CAACQ,MAAL;AACH;;AAEOpB,QAAAA,KAAK,GAAS;AAClB,eAAKvB,MAAL,CAAY4C,KAAZ,CAAkBC,KAAlB,CAAwB,CAAxB;AACH;;AAEOnB,QAAAA,OAAO,GAAS;AACpB,eAAKzB,UAAL,CAAgB6C,SAAhB;AACH;;AAEOlB,QAAAA,eAAe,GAAS;AAC5B,eAAK5B,MAAL,CAAY+C,MAAZ,CAAmBC,IAAnB,CAAwB,KAAK7C,eAA7B;AACH;;AAEO2B,QAAAA,cAAc,GAAS;AAC3B,eAAK9B,MAAL,CAAY6B,MAAZ,CAAmBoB,QAAnB;AACH;;AAEOjB,QAAAA,SAAS,GAAS;AACtB,eAAK9B,aAAL,CAAmBgD,cAAnB;AACH;;AAEOtC,QAAAA,iBAAiB,CAACuC,KAAD,EAAqB;AAC1CA,UAAAA,KAAK,CAACC,UAAN,CAAiBzC,EAAjB,CAAoB,KAAK0C,aAAzB,EAAwC,IAAxC;AACH;;AAEOvC,QAAAA,oBAAoB,CAACqC,KAAD,EAAqB;AAC7CA,UAAAA,KAAK,CAACC,UAAN,CAAiBE,GAAjB,CAAqB,KAAKD,aAA1B;AACH;;AAEOA,QAAAA,aAAa,CAACF,KAAD,EAAqB;AACtC,eAAKI,UAAL,CAAgBJ,KAAhB;AACA,eAAKK,YAAL,CAAkBL,KAAlB;AACApD,UAAAA,WAAW,CAAC0D,YAAZ,CAAyBN,KAAK,CAACO,wBAA/B,EAAyD,KAAKzC,mBAA9D,EAAmF,KAAK0C,iBAAL,CAAuBR,KAAvB,CAAnF;AACApD,UAAAA,WAAW,CAAC0D,YAAZ,CAAyBN,KAAK,CAACS,kBAA/B,EAAmD,KAAK1C,aAAxD,EAAuE,KAAKyC,iBAAL,CAAuBR,KAAvB,CAAvE;AACApD,UAAAA,WAAW,CAAC0D,YAAZ,CAAyBN,KAAK,CAACU,iBAA/B,EAAkD,KAAK1C,YAAvD,EAAqE,KAAKwC,iBAAL,CAAuBR,KAAvB,CAArE;AACH;;AAEOI,QAAAA,UAAU,CAACJ,KAAD,EAAqB;AACnC,eAAK,IAAIW,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGX,KAAK,CAACY,QAAlC,EAA4CD,KAAK,EAAjD,EAAqD;AACjD,iBAAK/C,SAAL,CAAeiD,KAAf,CAAqB,KAAKL,iBAAL,CAAuBR,KAAvB,CAArB;AACH;AACJ;;AAEOK,QAAAA,YAAY,CAACL,KAAD,EAAqB;AACrC,cAAIA,KAAK,CAACc,UAAN,IAAoB,CAAxB,EAA2B;;AAE3B,cAAId,KAAK,CAACc,UAAN,GAAmB,CAAvB,EAA0B;AACtB,gBAAI3E,MAAM,KAAK6D,KAAK,CAACc,UAArB,EAAiC;AAC7B,mBAAKjD,WAAL,CAAiBgD,KAAjB,CAAuBb,KAAK,CAACZ,IAAN,CAAWC,aAAlC;AACH;AACJ,WAJD,MAIO;AACH,iBAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,KAAK,CAACc,UAA1B,EAAsCC,CAAC,EAAvC,EAA2C;AACvC,mBAAKlD,WAAL,CAAiBgD,KAAjB,CAAuB,KAAKL,iBAAL,CAAuBR,KAAvB,CAAvB;AACH;AACJ;AACJ;;AAE0B,eAAZM,YAAY,CAACU,MAAD,EAAiBC,WAAjB,EAA2C5B,aAA3C,EAAsE;AAC7F,cAAIlD,MAAM,KAAK6E,MAAf,EAAuB;AACnBC,YAAAA,WAAW,CAACJ,KAAZ,CAAkBxB,aAAlB;AACH;AACJ;;AAEOmB,QAAAA,iBAAiB,CAACR,KAAD,EAAqB;AAC1C,gBAAMkB,QAAc,GAAGlB,KAAK,CAACZ,IAAN,CAAWC,aAAlC;AACA6B,UAAAA,QAAQ,CAACC,CAAT,IAAc/E,WAAW,CAAC,CAAC,EAAF,EAAM,EAAN,CAAzB;AACA8E,UAAAA,QAAQ,CAACE,CAAT,IAAchF,WAAW,CAAC,CAAC,EAAF,EAAM,EAAN,CAAzB;AAEA,iBAAO8E,QAAP;AACH;;AA3HsC,O","sourcesContent":["import { Component, random, randomRange, Vec3, _decorator } from \"cc\";\r\nimport { ISignal } from \"../../Services/EventSystem/ISignal\";\r\nimport { Signal } from \"../../Services/EventSystem/Signal\";\r\nimport { ItemSettings } from \"../Data/GameSettings\";\r\nimport { GameResult } from \"../Game\";\r\nimport { GameModalLauncher } from \"../ModalWIndows/GameModalLauncher\";\r\nimport { Enemy } from \"../Unit/Enemy/Enemy\";\r\nimport { EnemyManager } from \"../Unit/Enemy/EnemyManager\";\r\nimport { Player } from \"../Unit/Player/Player\";\r\nimport { Item } from \"./Item\";\r\nimport { ItemSpawner } from \"./ItemSpawner\";\r\nimport { ItemType } from \"./ItemType\";\r\nimport { PickupEffectManager } from \"./PickupEffect/PickupEffectManager\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"ItemManager\")\r\nexport class ItemManager extends Component {\r\n    @property(ItemSpawner) private xpSpawner: ItemSpawner;\r\n    @property(ItemSpawner) private goldSpawner: ItemSpawner;\r\n    @property(ItemSpawner) private healthPotionSpawner: ItemSpawner;\r\n    @property(ItemSpawner) private magnetSpawner: ItemSpawner;\r\n    @property(ItemSpawner) private chestSpawner: ItemSpawner;\r\n    @property(PickupEffectManager) private pickupEffectManager: PickupEffectManager;\r\n\r\n    private player: Player;\r\n    private gameResult: GameResult;\r\n    private modalLauncher: GameModalLauncher;\r\n    private healthPerPotion: number;\r\n\r\n    private pickupEvent = new Signal<ItemType>();\r\n\r\n    private itemTypeToAction = new Map<ItemType, () => void>();\r\n\r\n    public init(enemyManager: EnemyManager, player: Player, gameResult: GameResult, modalLauncher: GameModalLauncher, settings: ItemSettings): void {\r\n        this.player = player;\r\n        this.gameResult = gameResult;\r\n        this.modalLauncher = modalLauncher;\r\n        this.healthPerPotion = settings.healthPerPotion;\r\n\r\n        enemyManager.EnemyAddedEvent.on(this.addEnemyListeners, this);\r\n        enemyManager.EnemyRemovedEvent.on(this.removeEnemyListeners, this);\r\n\r\n        this.xpSpawner.init();\r\n        this.goldSpawner.init();\r\n        this.healthPotionSpawner.init();\r\n        this.magnetSpawner.init();\r\n        this.chestSpawner.init();\r\n\r\n        this.pickupEffectManager.init();\r\n\r\n        this.itemTypeToAction.set(ItemType.XP, this.addXP.bind(this));\r\n        this.itemTypeToAction.set(ItemType.Gold, this.addGold.bind(this));\r\n        this.itemTypeToAction.set(ItemType.HealthPotion, this.useHealthPotion.bind(this));\r\n        this.itemTypeToAction.set(ItemType.Magnet, this.activateMagnet.bind(this));\r\n        this.itemTypeToAction.set(ItemType.Chest, this.openChest.bind(this));\r\n    }\r\n\r\n    public get PickupEvent(): ISignal<ItemType> {\r\n        return this.pickupEvent;\r\n    }\r\n\r\n    public pickupItem(item: Item): void {\r\n        if (!this.itemTypeToAction.has(item.ItemType)) throw new Error(\"Does not have behaviour set for \" + item.ItemType);\r\n\r\n        this.pickupEffectManager.showEffect(item.node.worldPosition);\r\n        this.itemTypeToAction.get(item.ItemType)();\r\n        this.pickupEvent.trigger(item.ItemType);\r\n\r\n        item.pickup();\r\n    }\r\n\r\n    private addXP(): void {\r\n        this.player.Level.addXp(1);\r\n    }\r\n\r\n    private addGold(): void {\r\n        this.gameResult.goldCoins++;\r\n    }\r\n\r\n    private useHealthPotion(): void {\r\n        this.player.Health.heal(this.healthPerPotion);\r\n    }\r\n\r\n    private activateMagnet(): void {\r\n        this.player.Magnet.activate();\r\n    }\r\n\r\n    private openChest(): void {\r\n        this.modalLauncher.showChestModal();\r\n    }\r\n\r\n    private addEnemyListeners(enemy: Enemy): void {\r\n        enemy.DeathEvent.on(this.trySpawnItems, this);\r\n    }\r\n\r\n    private removeEnemyListeners(enemy: Enemy): void {\r\n        enemy.DeathEvent.off(this.trySpawnItems);\r\n    }\r\n\r\n    private trySpawnItems(enemy: Enemy): void {\r\n        this.trySpawnXP(enemy);\r\n        this.trySpawnGold(enemy);\r\n        ItemManager.trySpawnOnce(enemy.HealthPotionRewardChance, this.healthPotionSpawner, this.getRandomPosition(enemy));\r\n        ItemManager.trySpawnOnce(enemy.MagnetRewardChance, this.magnetSpawner, this.getRandomPosition(enemy));\r\n        ItemManager.trySpawnOnce(enemy.ChestRewardChance, this.chestSpawner, this.getRandomPosition(enemy));\r\n    }\r\n\r\n    private trySpawnXP(enemy: Enemy): void {\r\n        for (let index = 0; index < enemy.XPReward; index++) {\r\n            this.xpSpawner.spawn(this.getRandomPosition(enemy));\r\n        }\r\n    }\r\n\r\n    private trySpawnGold(enemy: Enemy): void {\r\n        if (enemy.GoldReward <= 0) return;\r\n\r\n        if (enemy.GoldReward < 1) {\r\n            if (random() < enemy.GoldReward) {\r\n                this.goldSpawner.spawn(enemy.node.worldPosition);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < enemy.GoldReward; i++) {\r\n                this.goldSpawner.spawn(this.getRandomPosition(enemy));\r\n            }\r\n        }\r\n    }\r\n\r\n    private static trySpawnOnce(chance: number, itemSpawner: ItemSpawner, worldPosition: Vec3): void {\r\n        if (random() < chance) {\r\n            itemSpawner.spawn(worldPosition);\r\n        }\r\n    }\r\n\r\n    private getRandomPosition(enemy: Enemy): Vec3 {\r\n        const position: Vec3 = enemy.node.worldPosition;\r\n        position.x += randomRange(-15, 15);\r\n        position.y += randomRange(-15, 15);\r\n\r\n        return position;\r\n    }\r\n}\r\n"]}