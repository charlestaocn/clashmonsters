{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/Unit/Enemy/ProjectileLauncher.cs/EnemyProjectileLauncher.ts"],"names":["EnemyProjectileLauncher","Vec3","Vec2","GameTimer","constructor","projectileLauncher","playerNode","enemyManager","settings","enemyToTimer","Map","cooldown","enemyIds","EnemyAddedEvent","on","tryAddEnemy","EnemyRemovedEvent","tryRemoveEnemy","init","projectileLifetime","projectileSpeed","projectileDamage","enemy","includes","Id","set","has","delete","gameTick","deltaTime","enemyAndTimerPair","enemyWorldPosition","node","worldPosition","shootTimer","tryFinishPeriod","direction","subtract","fireProjectiles","x","y"],"mappings":";;;sGAOaA,uB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPJC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,I,OAAAA,I;;AACZC,MAAAA,S,iBAAAA,S;;;;;;;;;yCAMIH,uB,GAAN,MAAMA,uBAAN,CAA8B;AAK1BI,QAAAA,WAAW,CACNC,kBADM,EAENC,UAFM,EAGdC,YAHc,EAIdC,QAJc,EAKhB;AAAA,eATMC,YASN,GATqB,IAAIC,GAAJ,EASrB;AAAA,eARMC,QAQN;AAAA,eAPMC,QAON;AAAA,eAJUP,kBAIV,GAJUA,kBAIV;AAAA,eAHUC,UAGV,GAHUA,UAGV;AACEC,UAAAA,YAAY,CAACM,eAAb,CAA6BC,EAA7B,CAAgC,KAAKC,WAArC,EAAkD,IAAlD;AACAR,UAAAA,YAAY,CAACS,iBAAb,CAA+BF,EAA/B,CAAkC,KAAKG,cAAvC,EAAuD,IAAvD;AAEA,eAAKN,QAAL,GAAgBH,QAAQ,CAACG,QAAzB;AACA,eAAKC,QAAL,GAAgBJ,QAAQ,CAACI,QAAzB;AACAP,UAAAA,kBAAkB,CAACa,IAAnB,CAAwBV,QAAQ,CAACW,kBAAjC,EAAqDX,QAAQ,CAACY,eAA9D,EAA+EZ,QAAQ,CAACa,gBAAxF,EAA0G,CAA1G;AACH;;AAEON,QAAAA,WAAW,CAACO,KAAD,EAAqB;AACpC,cAAI,KAAKV,QAAL,CAAcW,QAAd,CAAuBD,KAAK,CAACE,EAA7B,CAAJ,EAAsC;AAClC,iBAAKf,YAAL,CAAkBgB,GAAlB,CAAsBH,KAAtB,EAA6B;AAAA;AAAA,wCAAc,KAAKX,QAAnB,CAA7B;AACH;AACJ;;AAEOM,QAAAA,cAAc,CAACK,KAAD,EAAqB;AACvC,cAAI,CAAC,KAAKb,YAAL,CAAkBiB,GAAlB,CAAsBJ,KAAtB,CAAL,EAAmC;AAEnC,eAAKb,YAAL,CAAkBkB,MAAlB,CAAyBL,KAAzB;AACH;;AAEMM,QAAAA,QAAQ,CAACC,SAAD,EAA0B;AACrC,eAAKxB,kBAAL,CAAwBuB,QAAxB,CAAiCC,SAAjC;;AAEA,eAAK,IAAMC,iBAAX,IAAgC,KAAKrB,YAArC,EAAmD;AAC/C,gBAAMsB,kBAAwB,GAAGD,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,IAArB,CAA0BC,aAA3D;AACA,gBAAMC,UAAqB,GAAGJ,iBAAiB,CAAC,CAAD,CAA/C;AAEAI,YAAAA,UAAU,CAACN,QAAX,CAAoBC,SAApB;;AACA,gBAAIK,UAAU,CAACC,eAAX,EAAJ,EAAkC;AAC9B,kBAAIC,SAAe,GAAG,IAAInC,IAAJ,EAAtB;AACAmC,cAAAA,SAAS,GAAGnC,IAAI,CAACoC,QAAL,CAAcD,SAAd,EAAyB,KAAK9B,UAAL,CAAgB2B,aAAzC,EAAwDF,kBAAxD,CAAZ;AACA,mBAAK1B,kBAAL,CAAwBiC,eAAxB,CAAwCP,kBAAxC,EAA4D,CAAC,IAAI7B,IAAJ,CAASkC,SAAS,CAACG,CAAnB,EAAsBH,SAAS,CAACI,CAAhC,CAAD,CAA5D;AACH;AACJ;AACJ;;AA7CgC,O","sourcesContent":["import { Vec3, Node, Vec2 } from \"cc\";\r\nimport { GameTimer } from \"../../../../Services/GameTimer\";\r\nimport { EnemyLauncherSettings } from \"../../../Data/GameSettings\";\r\nimport { ProjectileLauncher } from \"../../../Projectile/ProjectileLauncher/ProjectileLauncher\";\r\nimport { Enemy } from \"../Enemy\";\r\nimport { EnemyManager } from \"../EnemyManager\";\r\n\r\nexport class EnemyProjectileLauncher {\r\n    private enemyToTimer = new Map<Enemy, GameTimer>();\r\n    private cooldown: number;\r\n    private enemyIds: string[];\r\n\r\n    public constructor(\r\n        private projectileLauncher: ProjectileLauncher,\r\n        private playerNode: Node,\r\n        enemyManager: EnemyManager,\r\n        settings: EnemyLauncherSettings\r\n    ) {\r\n        enemyManager.EnemyAddedEvent.on(this.tryAddEnemy, this);\r\n        enemyManager.EnemyRemovedEvent.on(this.tryRemoveEnemy, this);\r\n\r\n        this.cooldown = settings.cooldown;\r\n        this.enemyIds = settings.enemyIds;\r\n        projectileLauncher.init(settings.projectileLifetime, settings.projectileSpeed, settings.projectileDamage, 1);\r\n    }\r\n\r\n    private tryAddEnemy(enemy: Enemy): void {\r\n        if (this.enemyIds.includes(enemy.Id)) {\r\n            this.enemyToTimer.set(enemy, new GameTimer(this.cooldown));\r\n        }\r\n    }\r\n\r\n    private tryRemoveEnemy(enemy: Enemy): void {\r\n        if (!this.enemyToTimer.has(enemy)) return;\r\n\r\n        this.enemyToTimer.delete(enemy);\r\n    }\r\n\r\n    public gameTick(deltaTime: number): void {\r\n        this.projectileLauncher.gameTick(deltaTime);\r\n\r\n        for (const enemyAndTimerPair of this.enemyToTimer) {\r\n            const enemyWorldPosition: Vec3 = enemyAndTimerPair[0].node.worldPosition;\r\n            const shootTimer: GameTimer = enemyAndTimerPair[1];\r\n\r\n            shootTimer.gameTick(deltaTime);\r\n            if (shootTimer.tryFinishPeriod()) {\r\n                let direction: Vec3 = new Vec3();\r\n                direction = Vec3.subtract(direction, this.playerNode.worldPosition, enemyWorldPosition);\r\n                this.projectileLauncher.fireProjectiles(enemyWorldPosition, [new Vec2(direction.x, direction.y)]);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}