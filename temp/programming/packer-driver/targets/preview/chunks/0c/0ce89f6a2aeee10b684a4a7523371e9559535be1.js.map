{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Services/ModalWindowSystem/ModalWindow.ts"],"names":["Animation","Component","_decorator","UIButton","delay","property","ModalWindow","result","isDismissed","openAnimationName","closeAnimationName","runAsync","params","closeButton","InteractedEvent","on","dismiss","backgroundCloseButton","setup","animation","play","getCloseAnimationTime","state","getState","duration"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;;AACtBC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;;;OAEH;AAAEC,QAAAA;AAAF,O,GAAeH,U;;6BAECI,W,WACjBD,QAAQ,CAACL,SAAD,C,UACRK,QAAQ;AAAA;AAAA,+B,UACRA,QAAQ;AAAA;AAAA,+B,YAHN,MAAeC,WAAf,SAAoDL,SAApD,CAA8D;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAKzDM,MALyD;AAAA,eAMzDC,WANyD,GAM3C,KAN2C;AAAA,eAQzDC,iBARyD,GAQrC,MARqC;AAAA,eASzDC,kBATyD,GASpC,OAToC;AAAA;;AAWpDC,QAAAA,QAAQ,CAACC,MAAD,EAAoC;AAAA;;AAAA;AAAA;;AACrD,iCAAA,KAAI,CAACC,WAAL,uCAAkBC,eAAlB,CAAkCC,EAAlC,CAAqC,MAAM,KAAI,CAACC,OAAL,EAA3C,EAA2D,KAA3D;AACA,qCAAA,KAAI,CAACC,qBAAL,2CAA4BH,eAA5B,CAA4CC,EAA5C,CAA+C,MAAM,KAAI,CAACC,OAAL,EAArD,EAAqE,KAArE;;AAEA,YAAA,KAAI,CAACE,KAAL,CAAWN,MAAX;;AACA,+BAAA,KAAI,CAACO,SAAL,qCAAgBC,IAAhB,CAAqB,KAAI,CAACX,iBAA1B;;AACA,mBAAO,CAAC,KAAI,CAACD,WAAb,EAA0B,MAAM;AAAA;AAAA,gCAAM,GAAN,CAAN;;AAC1B,gCAAA,KAAI,CAACW,SAAL,sCAAgBC,IAAhB,CAAqB,KAAI,CAACV,kBAA1B;AAEA,kBAAM;AAAA;AAAA,gCAAM,KAAI,CAACW,qBAAL,KAA+B,IAArC,CAAN;AACA,mBAAO,KAAI,CAACd,MAAZ;AAVqD;AAWxD;;AAISS,QAAAA,OAAO,CAACT,MAAD,EAAyB;AACtC,eAAKA,MAAL,GAAcA,MAAd;AACA,eAAKC,WAAL,GAAmB,IAAnB;AACH;;AAEOa,QAAAA,qBAAqB,GAAW;AAAA;;AACpC,cAAMC,KAAK,uBAAG,KAAKH,SAAR,qBAAG,iBAAgBI,QAAhB,CAAyB,KAAKb,kBAA9B,CAAd;;AACA,cAAIY,KAAK,IAAI,IAAb,EAAmB;AACf,mBAAOA,KAAK,CAACE,QAAb;AACH;;AAED,iBAAO,CAAP;AACH;;AAtCgE,O","sourcesContent":["import { Animation, Component, _decorator } from \"cc\";\r\nimport { UIButton } from \"../UI/Button/UIButton\";\r\nimport { delay } from \"../Utils/AsyncUtils\";\r\n\r\nconst { property } = _decorator;\r\n\r\nexport abstract class ModalWindow<TParam, TResult> extends Component {\r\n    @property(Animation) private animation: Animation;\r\n    @property(UIButton) private closeButton: UIButton;\r\n    @property(UIButton) private backgroundCloseButton: UIButton;\r\n\r\n    private result: TResult;\r\n    private isDismissed = false;\r\n\r\n    private openAnimationName = \"open\";\r\n    private closeAnimationName = \"close\";\r\n\r\n    public async runAsync(params?: TParam): Promise<TResult> {\r\n        this.closeButton?.InteractedEvent.on(() => this.dismiss(), this);\r\n        this.backgroundCloseButton?.InteractedEvent.on(() => this.dismiss(), this);\r\n\r\n        this.setup(params);\r\n        this.animation?.play(this.openAnimationName);\r\n        while (!this.isDismissed) await delay(100);\r\n        this.animation?.play(this.closeAnimationName);\r\n\r\n        await delay(this.getCloseAnimationTime() * 1000);\r\n        return this.result;\r\n    }\r\n\r\n    protected abstract setup(params?: TParam): void;\r\n\r\n    protected dismiss(result?: TResult): void {\r\n        this.result = result;\r\n        this.isDismissed = true;\r\n    }\r\n\r\n    private getCloseAnimationTime(): number {\r\n        const state = this.animation?.getState(this.closeAnimationName);\r\n        if (state != null) {\r\n            return state.duration;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\r\n"]}