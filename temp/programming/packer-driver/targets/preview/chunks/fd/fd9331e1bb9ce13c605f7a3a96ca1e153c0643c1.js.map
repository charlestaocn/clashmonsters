{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/UI/GameUI.ts"],"names":["Component","Label","ProgressBar","_decorator","UIButton","ItemType","ccclass","property","GameUI","playerLevel","modalLauncher","gameResult","init","player","itemManager","Level","XpAddedEvent","on","updateProgressBar","LevelUpEvent","PickupEvent","tryUpdateGoldLabel","xpBar","progress","pauseBtn","InteractedEvent","showPauseWindow","XP","RequiredXP","itemType","Gold","goldLabel","string","goldCoins","toString","console","log","showPauseModal","updateTimeAlive","timeAlive","timeAliveText","Math","floor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,U,OAAAA,U;;AAC/BC,MAAAA,Q,iBAAAA,Q;;AAGAC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAKH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;wBAGjBK,M,WADZF,OAAO,CAAC,QAAD,C,UAEHC,QAAQ,CAACL,WAAD,C,UACRK,QAAQ,CAACN,KAAD,C,UACRM,QAAQ,CAACN,KAAD,C,UACRM,QAAQ;AAAA;AAAA,+B,2BALb,MACaC,MADb,SAC4BR,SAD5B,CACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAM1BS,WAN0B;AAAA,eAO1BC,aAP0B;AAAA,eAQ1BC,UAR0B;AAAA;;AAU3BC,QAAAA,IAAI,CAACC,MAAD,EAAiBH,aAAjB,EAAmDI,WAAnD,EAA6EH,UAA7E,EAA2G;AAClH,eAAKF,WAAL,GAAmBI,MAAM,CAACE,KAA1B;AACA,eAAKL,aAAL,GAAqBA,aAArB;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AAEA,eAAKF,WAAL,CAAiBO,YAAjB,CAA8BC,EAA9B,CAAiC,KAAKC,iBAAtC,EAAyD,IAAzD;AACA,eAAKT,WAAL,CAAiBU,YAAjB,CAA8BF,EAA9B,CAAiC,KAAKC,iBAAtC,EAAyD,IAAzD;AAEAJ,UAAAA,WAAW,CAACM,WAAZ,CAAwBH,EAAxB,CAA2B,KAAKI,kBAAhC,EAAoD,IAApD;AAEA,eAAKC,KAAL,CAAWC,QAAX,GAAsB,CAAtB;AAEA,eAAKC,QAAL,CAAcC,eAAd,CAA8BR,EAA9B,CAAiC,KAAKS,eAAtC,EAAuD,IAAvD;AACH;;AAEOR,QAAAA,iBAAiB,GAAS;AAC9B,eAAKI,KAAL,CAAWC,QAAX,GAAsB,KAAKd,WAAL,CAAiBkB,EAAjB,GAAsB,KAAKlB,WAAL,CAAiBmB,UAA7D;AACH;;AAEOP,QAAAA,kBAAkB,CAACQ,QAAD,EAA2B;AACjD,cAAIA,QAAQ,KAAK;AAAA;AAAA,oCAASC,IAA1B,EAAgC;AAEhC,eAAKC,SAAL,CAAeC,MAAf,GAAwB,KAAKrB,UAAL,CAAgBsB,SAAhB,CAA0BC,QAA1B,EAAxB;AACH;;AAEOR,QAAAA,eAAe,GAAS;AAC5BS,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,eAAK1B,aAAL,CAAmB2B,cAAnB;AACH;;AAEMC,QAAAA,eAAe,CAACC,SAAD,EAA0B;AAC5C,eAAKC,aAAL,CAAmBR,MAAnB,QAA+BS,IAAI,CAACC,KAAL,CAAWH,SAAX,CAA/B;AACH;;AA1CiC,O","sourcesContent":["import { Component, Label, ProgressBar, _decorator } from \"cc\";\r\nimport { UIButton } from \"../../Services/UI/Button/UIButton\";\r\nimport { GameResult } from \"../Game\";\r\nimport { ItemManager } from \"../Items/ItemManager\";\r\nimport { ItemType } from \"../Items/ItemType\";\r\nimport { GameModalLauncher } from \"../ModalWIndows/GameModalLauncher\";\r\nimport { Player } from \"../Unit/Player/Player\";\r\nimport { UnitLevel } from \"../Unit/UnitLevel\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GameUI\")\r\nexport class GameUI extends Component {\r\n    @property(ProgressBar) private xpBar: ProgressBar;\r\n    @property(Label) private timeAliveText: Label;\r\n    @property(Label) private goldLabel: Label;\r\n    @property(UIButton) private pauseBtn: UIButton;\r\n\r\n    private playerLevel: UnitLevel;\r\n    private modalLauncher: GameModalLauncher;\r\n    private gameResult: GameResult;\r\n\r\n    public init(player: Player, modalLauncher: GameModalLauncher, itemManager: ItemManager, gameResult: GameResult): void {\r\n        this.playerLevel = player.Level;\r\n        this.modalLauncher = modalLauncher;\r\n        this.gameResult = gameResult;\r\n\r\n        this.playerLevel.XpAddedEvent.on(this.updateProgressBar, this);\r\n        this.playerLevel.LevelUpEvent.on(this.updateProgressBar, this);\r\n\r\n        itemManager.PickupEvent.on(this.tryUpdateGoldLabel, this);\r\n\r\n        this.xpBar.progress = 0;\r\n\r\n        this.pauseBtn.InteractedEvent.on(this.showPauseWindow, this);\r\n    }\r\n\r\n    private updateProgressBar(): void {\r\n        this.xpBar.progress = this.playerLevel.XP / this.playerLevel.RequiredXP;\r\n    }\r\n\r\n    private tryUpdateGoldLabel(itemType: ItemType): void {\r\n        if (itemType !== ItemType.Gold) return;\r\n\r\n        this.goldLabel.string = this.gameResult.goldCoins.toString();\r\n    }\r\n\r\n    private showPauseWindow(): void {\r\n        console.log(\"Show pause window\");\r\n        this.modalLauncher.showPauseModal();\r\n    }\r\n\r\n    public updateTimeAlive(timeAlive: number): void {\r\n        this.timeAliveText.string = `${Math.floor(timeAlive)}`;\r\n    }\r\n}\r\n"]}