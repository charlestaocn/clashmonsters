{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/Unit/Enemy/EnemySpawner/CircularEnemySpawner.ts"],"names":["CircularEnemySpawner","GameTimer","roundToOneDecimal","DelayedEnemySpawner","constructor","enemySpawner","settings","common","startDelay","stopDelay","spawnTimer","enemyId","enemiesToSpawn","cooldown","delayedGameTick","deltaTime","gameTick","tryFinishPeriod","angle","Math","PI","i","posX","sin","posY","cos","spawnNewEnemy"],"mappings":";;;iFAOaA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPJC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,iB,iBAAAA,iB;;AAGAC,MAAAA,mB,iBAAAA,mB;;;;;;;sCAGIH,oB,GAAN,MAAMA,oBAAN;AAAA;AAAA,sDAAuD;AAKnDI,QAAAA,WAAW,CAASC,YAAT,EAAqCC,QAArC,EAA6E;AAC3F,gBAAMA,QAAQ,CAACC,MAAT,CAAgBC,UAAtB,EAAkCF,QAAQ,CAACC,MAAT,CAAgBE,SAAlD;AAD2F,eAJvFC,UAIuF;AAAA,eAHvFC,OAGuF;AAAA,eAFvFC,cAEuF;AAAA,eAApEP,YAAoE,GAApEA,YAAoE;AAG3F,eAAKK,UAAL,GAAkB;AAAA;AAAA,sCAAcJ,QAAQ,CAACC,MAAT,CAAgBM,QAA9B,CAAlB;AACA,eAAKF,OAAL,GAAeL,QAAQ,CAACC,MAAT,CAAgBI,OAA/B;AACA,eAAKC,cAAL,GAAsBN,QAAQ,CAACM,cAA/B;AACH;;AAEME,QAAAA,eAAe,CAACC,SAAD,EAA0B;AAC5C,eAAKL,UAAL,CAAgBM,QAAhB,CAAyBD,SAAzB;;AAEA,cAAI,KAAKL,UAAL,CAAgBO,eAAhB,EAAJ,EAAuC;AACnC,gBAAMC,KAAa,GAAI,IAAIC,IAAI,CAACC,EAAV,GAAgB,KAAKR,cAA3C;;AAEA,iBAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,cAAzB,EAAyCS,CAAC,EAA1C,EAA8C;AAC1C,kBAAMC,IAAY,GAAG;AAAA;AAAA,0DAAkBH,IAAI,CAACI,GAAL,CAASL,KAAK,GAAGG,CAAjB,CAAlB,IAAyC,GAA9D;AACA,kBAAMG,IAAY,GAAG;AAAA;AAAA,0DAAkBL,IAAI,CAACM,GAAL,CAASP,KAAK,GAAGG,CAAjB,CAAlB,IAAyC,GAA9D;AACA,mBAAKhB,YAAL,CAAkBqB,aAAlB,CAAgCJ,IAAhC,EAAsCE,IAAtC,EAA4C,KAAKb,OAAjD;AACH;AACJ;AACJ;;AAzByD,O","sourcesContent":["import { GameTimer } from \"../../../../Services/GameTimer\";\r\nimport { roundToOneDecimal } from \"../../../../Services/Utils/MathUtils\";\r\nimport { CircularEnemySpawnerSettings } from \"../../../Data/GameSettings\";\r\n\r\nimport { DelayedEnemySpawner } from \"./DelayedEnemySpawner\";\r\nimport { EnemySpawner } from \"./EnemySpawner\";\r\n\r\nexport class CircularEnemySpawner extends DelayedEnemySpawner {\r\n    private spawnTimer: GameTimer;\r\n    private enemyId: string;\r\n    private enemiesToSpawn: number;\r\n\r\n    public constructor(private enemySpawner: EnemySpawner, settings: CircularEnemySpawnerSettings) {\r\n        super(settings.common.startDelay, settings.common.stopDelay);\r\n\r\n        this.spawnTimer = new GameTimer(settings.common.cooldown);\r\n        this.enemyId = settings.common.enemyId;\r\n        this.enemiesToSpawn = settings.enemiesToSpawn;\r\n    }\r\n\r\n    public delayedGameTick(deltaTime: number): void {\r\n        this.spawnTimer.gameTick(deltaTime);\r\n\r\n        if (this.spawnTimer.tryFinishPeriod()) {\r\n            const angle: number = (2 * Math.PI) / this.enemiesToSpawn;\r\n\r\n            for (let i = 0; i < this.enemiesToSpawn; i++) {\r\n                const posX: number = roundToOneDecimal(Math.sin(angle * i)) * 600;\r\n                const posY: number = roundToOneDecimal(Math.cos(angle * i)) * 600;\r\n                this.enemySpawner.spawnNewEnemy(posX, posY, this.enemyId);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}