{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Game/Unit/Enemy/EnemyMover/PeriodicFollow/PeriodicFollowTargetEnemyMover.ts"],"names":["PeriodicFollowTargetEnemyMover","Vec3","EnemyMover","constructor","targetNode","followTime","waitTime","enemyToFollowState","Map","enemyToStateTimeLeft","addEnemy","enemy","setEnemyFollowState","EnemyFollowState","Follow","removeEnemy","gameTick","deltaTime","enemies","stateTimeLeft","get","switchEnemyFollowState","set","direction","subtract","worldPosition","node","normalize","Wait","followState"],"mappings":"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","sourcesContent":["import { Node, Vec3 } from \"cc\";\r\nimport { Enemy } from \"../../Enemy\";\r\nimport { EnemyMover } from \"../EnemyMover\";\r\n\r\nexport class PeriodicFollowTargetEnemyMover extends EnemyMover {\r\n    private enemyToFollowState: Map<Enemy, EnemyFollowState> = new Map<Enemy, EnemyFollowState>();\r\n    private enemyToStateTimeLeft: Map<Enemy, number> = new Map<Enemy, number>();\r\n\r\n    public constructor(targetNode: Node, private followTime: number, private waitTime: number) {\r\n        super(targetNode);\r\n    }\r\n\r\n    public addEnemy(enemy: Enemy): void {\r\n        this.setEnemyFollowState(enemy, EnemyFollowState.Follow, this.followTime);\r\n        super.addEnemy(enemy);\r\n    }\r\n\r\n    public removeEnemy(enemy: Enemy): void {\r\n        super.removeEnemy(enemy);\r\n    }\r\n\r\n    public gameTick(deltaTime: number): void {\r\n        for (const enemy of this.enemies) {\r\n            const stateTimeLeft: number = this.enemyToStateTimeLeft.get(enemy) - deltaTime;\r\n            if (stateTimeLeft <= 0) {\r\n                this.switchEnemyFollowState(enemy);\r\n            } else {\r\n                this.enemyToStateTimeLeft.set(enemy, stateTimeLeft);\r\n            }\r\n            if (this.enemyToFollowState.get(enemy) === EnemyFollowState.Follow) {\r\n                let direction: Vec3 = new Vec3();\r\n                direction = Vec3.subtract(direction, this.targetNode.worldPosition, enemy.node.worldPosition);\r\n                enemy.gameTick(direction.normalize(), deltaTime);\r\n            } else if (this.enemyToFollowState.get(enemy) === EnemyFollowState.Wait) {\r\n                enemy.gameTick(new Vec3(), deltaTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    private switchEnemyFollowState(enemy: Enemy): void {\r\n        const followState: EnemyFollowState = this.enemyToFollowState.get(enemy);\r\n        if (followState === EnemyFollowState.Follow) {\r\n            this.setEnemyFollowState(enemy, EnemyFollowState.Wait, this.waitTime);\r\n        } else if (followState === EnemyFollowState.Wait) {\r\n            this.setEnemyFollowState(enemy, EnemyFollowState.Follow, this.followTime);\r\n        }\r\n    }\r\n\r\n    private setEnemyFollowState(enemy: Enemy, followState: EnemyFollowState, stateTimeLeft: number): void {\r\n        this.enemyToFollowState.set(enemy, followState);\r\n        this.enemyToStateTimeLeft.set(enemy, stateTimeLeft);\r\n    }\r\n}\r\n\r\nexport enum EnemyFollowState {\r\n    Follow,\r\n    Wait\r\n}\r\n"]}