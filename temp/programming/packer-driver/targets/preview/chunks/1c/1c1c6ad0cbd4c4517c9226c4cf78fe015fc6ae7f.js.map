{"version":3,"sources":["file:///C:/project/work/cocos/clashmonsters/assets/Scripts/Menu/Menu.ts"],"names":["Canvas","Component","Label","Node","_decorator","AppRoot","requireAppRootAsync","UIButton","GameRunner","MenuModalLauncher","ccclass","property","Menu","menuModalLauncher","start","menuCanvas","cameraComponent","Instance","MainCamera","playBtn","InteractedEvent","on","startGame","upgradeBtn","openUpgradesWindow","audioSettingsBtn","openAudioSettingsWindow","ModalWindowManager","highscoreLabel","string","Math","floor","LiveUserData","game","highscore","updateGoldIndicators","upgradeAvailableIndicator","active","isUpgradeAffordable","goldCoins","goldCounter","goldLabel","toString","metaUpgrades","metaUpgradesSettings","Settings","costs","tryPushLowestCost","goldGathererLevel","goldGatherer","healthLevel","health","movementSpeedLevel","movementSpeed","overallDamageLevel","overallDamage","projectilePiercingLevel","projectilePiercing","xpGathererLevel","xpGatherer","length","min","upgradeLevel","metaUpgradeSettings","push","ScreenFader","playOpen","playGame"],"mappings":"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","sourcesContent":["import { approx, Canvas, Component, Label, Node, _decorator } from \"cc\";\r\nimport { AppRoot } from \"../AppRoot/AppRoot\";\r\nimport { requireAppRootAsync } from \"../AppRoot/AppRootUtils\";\r\nimport { MetaUpgradeSettings } from \"../Game/Data/GameSettings\";\r\nimport { MetaUpgradesData } from \"../Game/Data/UserData\";\r\nimport { UIButton } from \"../Services/UI/Button/UIButton\";\r\nimport { GameRunner } from \"./GameRunner\";\r\nimport { MenuModalLauncher } from \"./ModalWindows/MenuModalLauncher\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"Menu\")\r\nexport class Menu extends Component {\r\n    @property(UIButton) private playBtn: UIButton;\r\n    @property(UIButton) private upgradeBtn: UIButton;\r\n    @property(Node) private upgradeAvailableIndicator: Node;\r\n    @property(Node) private goldCounter: Node;\r\n    @property(Label) private goldLabel: Label;\r\n    @property(UIButton) private audioSettingsBtn: UIButton;\r\n    @property(Canvas) private menuCanvas: Canvas;\r\n    @property(Label) private highscoreLabel: Label;\r\n\r\n    private menuModalLauncher: MenuModalLauncher;\r\n\r\n    public async start(): Promise<void> {\r\n        requireAppRootAsync();\r\n        this.menuCanvas.cameraComponent = AppRoot.Instance.MainCamera;\r\n\r\n        this.playBtn.InteractedEvent.on(this.startGame, this);\r\n        this.upgradeBtn.InteractedEvent.on(this.openUpgradesWindow, this);\r\n        this.audioSettingsBtn.InteractedEvent.on(this.openAudioSettingsWindow, this);\r\n        this.menuModalLauncher = new MenuModalLauncher(AppRoot.Instance.ModalWindowManager);\r\n        this.highscoreLabel.string = `Highscore: ${Math.floor(AppRoot.Instance.LiveUserData.game.highscore)}`;\r\n        this.updateGoldIndicators();\r\n    }\r\n\r\n    private updateGoldIndicators(): void {\r\n        this.upgradeAvailableIndicator.active = this.isUpgradeAffordable();\r\n\r\n        const goldCoins = AppRoot.Instance.LiveUserData.game.goldCoins;\r\n        this.goldCounter.active = true;\r\n        this.goldLabel.string = goldCoins.toString();\r\n    }\r\n\r\n    private isUpgradeAffordable(): boolean {\r\n        const goldCoins: number = AppRoot.Instance.LiveUserData.game.goldCoins;\r\n        const metaUpgrades: MetaUpgradesData = AppRoot.Instance.LiveUserData.game.metaUpgrades;\r\n\r\n        const metaUpgradesSettings = AppRoot.Instance.Settings.metaUpgrades;\r\n\r\n        const costs: number[] = [];\r\n        this.tryPushLowestCost(metaUpgrades.goldGathererLevel, metaUpgradesSettings.goldGatherer, costs);\r\n        this.tryPushLowestCost(metaUpgrades.healthLevel, metaUpgradesSettings.health, costs);\r\n        this.tryPushLowestCost(metaUpgrades.movementSpeedLevel, metaUpgradesSettings.movementSpeed, costs);\r\n        this.tryPushLowestCost(metaUpgrades.overallDamageLevel, metaUpgradesSettings.overallDamage, costs);\r\n        this.tryPushLowestCost(metaUpgrades.projectilePiercingLevel, metaUpgradesSettings.projectilePiercing, costs);\r\n        this.tryPushLowestCost(metaUpgrades.xpGathererLevel, metaUpgradesSettings.xpGatherer, costs);\r\n\r\n        return 0 < costs.length ? Math.min(...costs) <= goldCoins : false;\r\n    }\r\n\r\n    private tryPushLowestCost(upgradeLevel: number, metaUpgradeSettings: MetaUpgradeSettings, costs: number[]): void {\r\n        if (upgradeLevel < metaUpgradeSettings.costs.length) {\r\n            costs.push(metaUpgradeSettings.costs[upgradeLevel]);\r\n        }\r\n    }\r\n\r\n    private startGame(): void {\r\n        AppRoot.Instance.ScreenFader.playOpen();\r\n        GameRunner.Instance.playGame();\r\n    }\r\n\r\n    private async openUpgradesWindow(): Promise<void> {\r\n        await this.menuModalLauncher.openUpgradesWindow();\r\n        this.updateGoldIndicators();\r\n    }\r\n\r\n    private openAudioSettingsWindow(): void {\r\n        this.menuModalLauncher.openAudioSettingsWindow();\r\n    }\r\n}\r\n"]}